services:
  db:
    image: postgres:16
    container_name: myapp-db
    environment:
      POSTGRES_DB: myapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5433:5432' # внешний порт 5433 → внутренний 5432 (для подключения с хоста)
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d myapp']
      interval: 5s
      timeout: 3s
      retries: 10

  api:
    build: .
    container_name: myapp-api
    working_dir: /app
    env_file:
      - .env
    environment:
      # ПЕРЕОПРЕДЕЛЯЕМ только адрес БД для контейнера:
      # важно: host = db, порт = 5432 (внутренний порт сервиса Postgres)
      DB_URL: postgresql+asyncpg://postgres:postgres@db:5432/myapp
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_started
    ports:
      - '8000:8000'
    expose:
      - '8000' # доступно только внутри docker-сети
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --proxy-headers
    volumes:
      - ./:/app
      - ./tools/websocat:/usr/local/bin/websocat:ro

  # --- База данных для Keycloak ---
  keycloak-db:
    image: postgres:15-alpine
    container_name: keycloak-db
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    ports:
      - '5432:5432'
    volumes:
      - keycloak_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U keycloak -d keycloak_db']
      interval: 5s
      timeout: 3s
      retries: 10

  # --- Keycloak ---
  keycloak:
    image: quay.io/keycloak/keycloak:26.4.0
    container_name: myapp-keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak_db
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
    depends_on:
      keycloak-db:
        condition: service_healthy
    command:
      - 'start-dev'
      - '--verbose'
      #- "--hostname=http://51.250.97.137:8080"
      - '--http-enabled=true'
      - '--proxy-headers=xforwarded'
    ports:
      - '8080:8080'

  #caddy:
  #image: caddy:2
  #container_name: myapp-caddy
  #restart: unless-stopped
  #ports:
  #  - "80:80"
  #  - "443:443"
  #volumes:
  #  - ./Caddyfile:/etc/caddy/Caddyfile:ro
  # - caddy_data:/data
  # - caddy_config:/config
  #depends_on:
  # - api

volumes:
  pgdata:
  keycloak_pgdata:
  #caddy_data:
  #caddy_config:
