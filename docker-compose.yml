services:
  db:
    image: postgres:16
    container_name: myapp-db
    environment:
      POSTGRES_DB: myapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"   # внешний порт 5433 → внутренний 5432 (для подключения с хоста)
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d myapp"]
      interval: 5s
      timeout: 3s
      retries: 10

  api:
    build: .                   # собирает образ из твоего Dockerfile
    container_name: myapp-api
    working_dir: /app
    env_file:
      - .env                   # подхватывает твои переменные окружения
    environment:
      # ПЕРЕОПРЕДЕЛЯЕМ только адрес БД для контейнера:
      # важно: host = db, порт = 5432 (внутренний порт сервиса Postgres)
      DB_URL: postgresql+asyncpg://postgres:postgres@db:5432/myapp
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_started
    ports:
      - "8001:8000"            # FastAPI доступен на localhost:8001 (в контейнере 8000)
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    volumes:
      - ./:/app

   # --- База данных для Keycloak ---
  keycloak-db:
    image: postgres:15-alpine
    container_name: keycloak-db
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - keycloak_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak_db"]
      interval: 5s
      timeout: 3s
      retries: 10

  # --- Keycloak ---
  keycloak:
    image: quay.io/keycloak/keycloak:26.4.0
    container_name: myapp-keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak_db
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME_STRICT: 'false'
      KC_HTTP_ENABLED: 'true'
      KC_PROXY: edge
    depends_on:
      keycloak-db:
        condition: service_healthy
    command: start-dev --verbose
    ports:
      - "8080:8080"


volumes:
  pgdata:
  keycloak_pgdata: