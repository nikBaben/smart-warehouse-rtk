from typing import List, Dict
from fastapi import HTTPException
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy.exc import IntegrityError, SQLAlchemyError
from sqlalchemy import text


class PredictRepository:
    def __init__(self, session: AsyncSession):
        self.session = session

    # üîπ –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ø-5 –±–ª–∏–∂–∞–π—à–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∫ –∏—Å—Ç–æ—â–µ–Ω–∏—é
    async def get_top5_soon_depleted(self, warehouse_id: str) -> List[Dict]:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç 5 —Ç–æ–≤–∞—Ä–æ–≤ —Å –±–ª–∏–∂–∞–π—à–µ–π –¥–∞—Ç–æ–π –∏—Å—Ç–æ—â–µ–Ω–∏—è –Ω–∞ —Å–∫–ª–∞–¥–µ.
        """
        try:
            query = text("""
                SELECT product_id, warehouse_id, depletion_at
                FROM predict_at
                WHERE warehouse_id = :wid
                  AND depletion_at IS NOT NULL
                ORDER BY depletion_at ASC
                LIMIT 5
            """)
            result = await self.session.execute(query, {"wid": warehouse_id})
            rows = [dict(r) for r in result.mappings().all()]
            return rows

        except IntegrityError as e:
            await self.session.rollback()
            code = getattr(getattr(e, "orig", None), "pgcode", None)
            if code == "23503":
                raise HTTPException(
                    status_code=422,
                    detail=f"–û—à–∏–±–∫–∞ —Å–≤—è–∑–µ–π (FK violation) –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Å–∫–ª–∞–¥–∞ {warehouse_id}"
                )
            raise HTTPException(
                status_code=500,
                detail=f"–û—à–∏–±–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö: {str(e)}"
            )

        except SQLAlchemyError as e:
            await self.session.rollback()
            raise HTTPException(
                status_code=500,
                detail=f"–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤: {str(e)}"
            )

        except Exception as e:
            await self.session.rollback()
            raise HTTPException(
                status_code=500,
                detail=f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –ø—Ä–æ–≥–Ω–æ–∑–∞–º–∏: {str(e)}"
            )
