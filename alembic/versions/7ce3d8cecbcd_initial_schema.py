"""initial schema

Revision ID: 7ce3d8cecbcd
Revises: 
Create Date: 2025-10-31 10:03:57.032653

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7ce3d8cecbcd'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_shipment_items_product_id'), table_name='shipment_items')
    op.drop_index(op.f('ix_shipment_items_shipment_id'), table_name='shipment_items')
    op.drop_index(op.f('ix_shipment_items_warehouse_id'), table_name='shipment_items')
    op.drop_table('shipment_items')
    op.drop_index(op.f('ix_shipments_name'), table_name='shipments')
    op.drop_index(op.f('ix_shipments_scheduled_at'), table_name='shipments')
    op.drop_index(op.f('ix_shipments_shipped_at'), table_name='shipments')
    op.drop_index(op.f('ix_shipments_warehouse_id'), table_name='shipments')
    op.drop_table('shipments')
    op.drop_index(op.f('ix_delivery_items_delivery_id'), table_name='delivery_items')
    op.drop_index(op.f('ix_delivery_items_product_id'), table_name='delivery_items')
    op.drop_index(op.f('ix_delivery_items_warehouse_id'), table_name='delivery_items')
    op.drop_table('delivery_items')
    op.drop_index(op.f('ix_deliveries_delivered_at'), table_name='deliveries')
    op.drop_index(op.f('ix_deliveries_name'), table_name='deliveries')
    op.drop_index(op.f('ix_deliveries_scheduled_at'), table_name='deliveries')
    op.drop_index(op.f('ix_deliveries_warehouse_id'), table_name='deliveries')
    op.drop_table('deliveries')
    op.drop_index(op.f('ix_scheduled_deliveries_product_id'), table_name='scheduled_deliveries')
    op.drop_index(op.f('ix_scheduled_deliveries_scheduled_at'), table_name='scheduled_deliveries')
    op.drop_index(op.f('ix_scheduled_deliveries_warehouse_id'), table_name='scheduled_deliveries')
    op.drop_table('scheduled_deliveries')
    op.drop_index(op.f('ix_inventory_history_warehouse_id'), table_name='inventory_history')
    op.drop_constraint(op.f('inventory_history_warehouse_id_fkey'), 'inventory_history', type_='foreignkey')
    op.create_foreign_key(None, 'inventory_history', 'warehouses', ['warehouse_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_products_warehouse_id'), table_name='products')
    op.drop_constraint(op.f('products_warehouse_id_fkey'), 'products', type_='foreignkey')
    op.create_foreign_key(None, 'products', 'warehouses', ['warehouse_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_robot_history_warehouse_id'), table_name='robot_history')
    op.drop_constraint(op.f('robot_history_warehouse_id_fkey'), 'robot_history', type_='foreignkey')
    op.create_foreign_key(None, 'robot_history', 'warehouses', ['warehouse_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_robots_warehouse_id'), table_name='robots')
    op.drop_constraint(op.f('robots_warehouse_id_fkey'), 'robots', type_='foreignkey')
    op.create_foreign_key(None, 'robots', 'warehouses', ['warehouse_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'robots', type_='foreignkey')
    op.create_foreign_key(op.f('robots_warehouse_id_fkey'), 'robots', 'warehouses', ['warehouse_id'], ['id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.create_index(op.f('ix_robots_warehouse_id'), 'robots', ['warehouse_id'], unique=False)
    op.drop_constraint(None, 'robot_history', type_='foreignkey')
    op.create_foreign_key(op.f('robot_history_warehouse_id_fkey'), 'robot_history', 'warehouses', ['warehouse_id'], ['id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.create_index(op.f('ix_robot_history_warehouse_id'), 'robot_history', ['warehouse_id'], unique=False)
    op.drop_constraint(None, 'products', type_='foreignkey')
    op.create_foreign_key(op.f('products_warehouse_id_fkey'), 'products', 'warehouses', ['warehouse_id'], ['id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.create_index(op.f('ix_products_warehouse_id'), 'products', ['warehouse_id'], unique=False)
    op.drop_constraint(None, 'inventory_history', type_='foreignkey')
    op.create_foreign_key(op.f('inventory_history_warehouse_id_fkey'), 'inventory_history', 'warehouses', ['warehouse_id'], ['id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.create_index(op.f('ix_inventory_history_warehouse_id'), 'inventory_history', ['warehouse_id'], unique=False)
    op.create_table('scheduled_deliveries',
    sa.Column('id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('warehouse_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('scheduled_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('supplier', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('notes', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('scheduled_deliveries_product_id_fkey'), onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], name=op.f('scheduled_deliveries_warehouse_id_fkey'), onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('scheduled_deliveries_pkey'))
    )
    op.create_index(op.f('ix_scheduled_deliveries_warehouse_id'), 'scheduled_deliveries', ['warehouse_id'], unique=False)
    op.create_index(op.f('ix_scheduled_deliveries_scheduled_at'), 'scheduled_deliveries', ['scheduled_at'], unique=False)
    op.create_index(op.f('ix_scheduled_deliveries_product_id'), 'scheduled_deliveries', ['product_id'], unique=False)
    op.create_table('deliveries',
    sa.Column('id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('warehouse_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('scheduled_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('delivered_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=11), autoincrement=False, nullable=False),
    sa.Column('supplier', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('notes', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], name='deliveries_warehouse_id_fkey', onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='deliveries_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_deliveries_warehouse_id'), 'deliveries', ['warehouse_id'], unique=False)
    op.create_index(op.f('ix_deliveries_scheduled_at'), 'deliveries', ['scheduled_at'], unique=False)
    op.create_index(op.f('ix_deliveries_name'), 'deliveries', ['name'], unique=False)
    op.create_index(op.f('ix_deliveries_delivered_at'), 'deliveries', ['delivered_at'], unique=False)
    op.create_table('delivery_items',
    sa.Column('id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('delivery_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('warehouse_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('ordered_quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('fact_quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['delivery_id'], ['deliveries.id'], name=op.f('delivery_items_delivery_id_fkey'), onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('delivery_items_product_id_fkey'), onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], name=op.f('delivery_items_warehouse_id_fkey'), onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('delivery_items_pkey'))
    )
    op.create_index(op.f('ix_delivery_items_warehouse_id'), 'delivery_items', ['warehouse_id'], unique=False)
    op.create_index(op.f('ix_delivery_items_product_id'), 'delivery_items', ['product_id'], unique=False)
    op.create_index(op.f('ix_delivery_items_delivery_id'), 'delivery_items', ['delivery_id'], unique=False)
    op.create_table('shipments',
    sa.Column('id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('warehouse_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('scheduled_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('shipped_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=11), autoincrement=False, nullable=False),
    sa.Column('customer', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('notes', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], name='shipments_warehouse_id_fkey', onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='shipments_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_shipments_warehouse_id'), 'shipments', ['warehouse_id'], unique=False)
    op.create_index(op.f('ix_shipments_shipped_at'), 'shipments', ['shipped_at'], unique=False)
    op.create_index(op.f('ix_shipments_scheduled_at'), 'shipments', ['scheduled_at'], unique=False)
    op.create_index(op.f('ix_shipments_name'), 'shipments', ['name'], unique=False)
    op.create_table('shipment_items',
    sa.Column('id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('shipment_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('warehouse_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('ordered_quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('fact_quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('shipment_items_product_id_fkey'), onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['shipment_id'], ['shipments.id'], name=op.f('shipment_items_shipment_id_fkey'), onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], name=op.f('shipment_items_warehouse_id_fkey'), onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('shipment_items_pkey'))
    )
    op.create_index(op.f('ix_shipment_items_warehouse_id'), 'shipment_items', ['warehouse_id'], unique=False)
    op.create_index(op.f('ix_shipment_items_shipment_id'), 'shipment_items', ['shipment_id'], unique=False)
    op.create_index(op.f('ix_shipment_items_product_id'), 'shipment_items', ['product_id'], unique=False)
    # ### end Alembic commands ###
